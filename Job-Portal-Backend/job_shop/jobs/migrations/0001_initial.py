# Generated by Django 4.1.5 on 2023-01-19 13:06

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import jobs.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserAuth',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=50, unique=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('dob', models.CharField(blank=True, max_length=150, null=True)),
                ('gender', models.CharField(blank=True, max_length=30, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': 'Authenticated User',
            },
        ),
        migrations.CreateModel(
            name='PersonalInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fullName', models.CharField(blank=True, max_length=100, null=True)),
                ('infoDob', models.CharField(blank=True, max_length=150, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('nationality', models.CharField(blank=True, max_length=50, null=True)),
                ('nid', models.CharField(blank=True, max_length=50, null=True)),
                ('gender', models.CharField(blank=True, max_length=30, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('profilePic', models.ImageField(blank=True, null=True, upload_to=jobs.models.upload_pic)),
                ('objective', models.TextField(blank=True, max_length=255, null=True)),
                ('educationLevel', models.CharField(blank=True, max_length=100, null=True)),
                ('degreeTitle', models.CharField(blank=True, max_length=40, null=True)),
                ('instituteName', models.CharField(blank=True, max_length=100, null=True)),
                ('educationSubject', models.CharField(blank=True, max_length=100, null=True)),
                ('graduationYear', models.CharField(blank=True, max_length=150, null=True)),
                ('duration', models.CharField(blank=True, max_length=20, null=True)),
                ('score', models.CharField(blank=True, max_length=20, null=True)),
                ('outOfScore', models.CharField(blank=True, max_length=20, null=True)),
                ('organizationName', models.CharField(blank=True, max_length=100, null=True)),
                ('departmentName', models.CharField(blank=True, max_length=100, null=True)),
                ('positionHeld', models.CharField(blank=True, max_length=100, null=True)),
                ('experienceFrom', models.CharField(blank=True, max_length=150, null=True)),
                ('experienceTo', models.CharField(blank=True, max_length=150, null=True)),
                ('experienceCheck', models.BooleanField(default=True)),
                ('responsibility', models.TextField(blank=True, null=True)),
                ('achievement', models.TextField(blank=True, null=True)),
                ('vendorName', models.CharField(blank=True, max_length=100, null=True)),
                ('certificateTopic', models.CharField(blank=True, max_length=150, null=True)),
                ('certificateScore', models.CharField(blank=True, max_length=30, null=True)),
                ('idNo', models.CharField(blank=True, max_length=30, null=True)),
                ('certificateFile', models.FileField(blank=True, null=True, upload_to=jobs.models.upload_files)),
                ('certificationDate', models.CharField(blank=True, max_length=150, null=True)),
                ('expireDate', models.CharField(blank=True, max_length=150, null=True)),
                ('certificateCheck', models.BooleanField(default=True)),
                ('trainingSubject', models.CharField(blank=True, max_length=100, null=True)),
                ('trainingVendorName', models.CharField(blank=True, max_length=100, null=True)),
                ('trainingFrom', models.CharField(blank=True, max_length=150, null=True)),
                ('trainingTo', models.CharField(blank=True, max_length=150, null=True)),
                ('trainingFile', models.FileField(blank=True, null=True, upload_to=jobs.models.upload_files)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='personal_info', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'User CV',
            },
        ),
    ]
